<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SffaNHgAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAKWSURBVFhH7Vc7
        axRhFN1I1IAvbC3UQrSyEK1UxNaYRqyENGkTsBUJ9qIgKKRUAiJ2sc8GAgb/Q1Ah0SSKiMHHzu48Fq7n
        zJ6ZdWYnO9mZXd3CA5e599w737kz32NnK0OLunk3HfM+0+iLjlE2nwvHgq2GBVdo9EXHKJvPhWO+yU34
        EcrmE2hY40Td/CUUeiyOTOlwgCxTutc8NarQPK4058tfqllw18z2icp9gqJ5amBKZsEtigoLvD/FCc7b
        Lwuu0naa46J5aO2npsJkhxGwcm/wRhp90THK5hOaWQ0MGsPXwL8wyf+fgs4GHGtO4Fy4Q4N/XXTfeCKn
        Ad/F1rlPoy+6bzyBuGsDcTwIn0jEGckVcrSa+a9F940nyMlNBX8JXRtA/IacbEX0rviaeZO4nscP3As8
        9Vv4Lo7jTfgv8W1wWbfkNhDHvfj4kdkDoUeI19HAbf7kfjU75Jp7CtwMvo4+4TqHulFc34U3E9EAERC7
        7e3jN0Tn8N5ZiD+GX/1udlSpBL6ZHUZjy6iZE9UCiFQDzfH29mleE92VRwO3MM7aTuIRts2OoO5D3YJL
        ojIbKHKwzPO1K+wAXvte1DxxzDnGOq4RpbIaKHSwrGPOTypMoCUevKLR/2nuGfgbSmc2EMe78QnEPzD4
        QdgYBr+Ha/iFlRYXh5r2GsoarMjB8pGrHYOPQGxBggckvhCJE/oIXlUY3tzxTdgrMMYz2Ax9irWa8L+k
        xQnw02jgucKQqKJwtkwTXNUYY5NbjTFF8Zam0uLRLoCdE9V6JSAWYYn/BT1YeKhgcT7Aky1TJBw4BYlX
        UfdQVH+Bpx1lExAJT0KsidPgxvSA07A1npTgRnTLYIDpuAixpxSEbcPew+ZhF1QyLKhUfgM0MbjpVqKJ
        QgAAAABJRU5ErkJggg==
</value>
  </data>
</root>